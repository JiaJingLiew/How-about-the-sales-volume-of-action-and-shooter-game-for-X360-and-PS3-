Sys.setenv(LANGUAGE="en")
library(shiny)
library(psych)
library(ggplot2)
library(dplyr)
library(datasets)
library(plotly)
data("airquality")
a<-data.frame(airquality)
class(a)
describe(a)
am1<-lm(Ozone~Wind,a)
summary(am1)
anova(am1)
am2<-lm(Ozone~Wind+Temp,a)
summary(am2)
anova(am2)
p1<-plot_ly(a, x=a$Day, y=a$Ozone, type="bar") %>% layout(xaxis=list(title='Day'), yaxis=list(title='Ozone'))
p1
p2<-plot_ly(a, x=a$Day, y=a$Wind, type="scatter") %>% layout(xaxis=list(title='Day'), yaxis=list(title='Wind'))
p2
p3<-plot_ly(a, x=a$Temp, y=a$Ozone, type="bar") %>% layout(xaxis=list(title='Temp'), yaxis=list(title='Ozone'))
p3
p4<-plot_ly(a, x=a$Temp, y=a$Wind, type="bar") %>% layout(xaxis=list(title='Temp'), yaxis=list(title='Wind'))
p4
p5<-plot_ly(a, x=a$Day, y=a$Temp, type="bar") %>% layout(xaxis=list(title='Day'), yaxis=list(title='Temp'))
p5
p<-subplot(p1, p2, p3, p4)
annotations = list(
list(x=0.15,y=1.0,text="Day-Ozone",xref="paper",yref="paper",xanchor="center",yanchor="bottom",showarrow=FALSE),
list(x=0.4,y=1.0,text="Day-Wind",xref="paper",yref="paper",xanchor="center",yanchor="bottom",showarrow=FALSE),
list(x=0.65,y=1.0,text="Temp-Ozone",xref="paper",yref="paper",xanchor="center",yanchor="bottom",showarrow=FALSE),
list(x=0.9,y=1.0,text="Temp-Wind",xref="paper",yref="paper",xanchor="center",yanchor="bottom",showarrow=FALSE))
p<-p %>%layout(annotations = annotations)
p
savehistory("~/03/Shiny Application and Reproducible Pitch.Rhistory")
source("~/03/Shiny Application and Reproducible Pitch.R")
install.packages("psych")
source("~/03/Shiny Application and Reproducible Pitch.R")
?airquality
install.packages("rmarkdown")
install.packages("rmarkdown")
library(rmarkdown)
install.packages("learnr")
force(rmarkdown_format)
force(shiny_prerendered_chunk)
source("~/03/Shiny Application and Reproducible Pitch.R")
source("~/03/Shiny Application and Reproducible Pitch.R")
knitr::opts_chunk$set(echo = TRUE)
p1<-plot_ly(a, x=a$Day, y=a$Ozone, type="bar", col="green") %>% layout(xaxis=list(title='Day'),yaxis=list(title='Ozone'))
p1<-plot_ly(a, x=a$Day, y=a$Ozone, type="bar") %>% layout(xaxis=list(title='Day'),yaxis=list(title='Ozone'))
p1<-plot_ly(a, x=a$Day, y=a$Ozone, type="bar") %>% layout(xaxis=list(title='Day'),yaxis=list(title='Ozone'))
p1<-plot(a, x=a$Day, y=a$Ozone, type="bar") %>% layout(xaxis=list(title='Day'),yaxis=list(title='Ozone'))
p1<-plot(a, x=a$Day, y=a$Ozone, type="bar") %>% layout(xaxis=list(title='Day'),yaxis=list(title='Ozone'))
install.packages("Rmarkdown")
library(rmarkdown)
remotes::install_github("yihui/xaringan")
library(xaringun)
library(xaringan)
knitr::opts_chunk$set(echo = FALSE)
Sys.setenv(LANGUAGE="en")
library(shiny)
library(psych)
library(ggplot2)
library(dplyr)
library(datasets)
library(plotly)
data("airquality")
a<-data.frame(airquality)
class(a)
describe(a)
```
p1<-plot_ly(a, x=a$Day, y=a$Ozone, type="bar") %>% layout(xaxis=list(title='Day'),yaxis=list(title='Ozone'))
p1
p2<-plot_ly(a, x=a$Day, y=a$Wind, type="bar") %>% layout(xaxis=list(title='Day'), yaxis=list(title='Wind'))
p2
```
p2<-plot_ly(a, x=a$Day, y=a$Wind, type="bar") %>% layout(xaxis=list(title='Day'), yaxis=list(title='Wind'))
p2
```
p2<-plot_ly(a, x=a$Day, y=a$Wind, type="scatter") %>% layout(xaxis=list(title='Day'), yaxis=list(title='Wind'))
p2
```
p2<-plot_ly(a, x=a$Day, y=a$Wind, type="bar") %>% layout(xaxis=list(title='Day'), yaxis=list(title='Wind'))
p2
```
p3<-plot_ly(a, x=a$Temp, y=a$Ozone, type="bar") %>% layout(xaxis=list(title='Temp'), yaxis=list(title='Ozone'))
p3
```
p4<-plot_ly(a, x=a$Temp, y=a$Wind, type="bar") %>% layout(xaxis=list(title='Temp'), yaxis=list(title='Wind'))
p4
```
p5<-plot_ly(a, x=a$Day, y=a$Temp, type="bar") %>% layout(xaxis=list(title='Day'), yaxis=list(title='Temp'))
p5
```
plot_ly(a, x=a$Day, y=a$Temp, type="bar") %>% layout(xaxis=list(title='Day'), yaxis=list(title='Temp'))
```
hist(a$Wind, main="Daily Wind", col="lightyellow")
hist(a$Temp, main="Daily Wind", col="lightgreen")
knitr::opts_chunk$set(echo = FALSE)
Sys.setenv(LANGUAGE="en")
library(shiny)
library(psych)
library(ggplot2)
library(dplyr)
library(datasets)
library(plotly)
data("airquality")
a<-data.frame(airquality)
class(a)
describe(a)
```
Sys.setenv(LANGUAGE="en")
library(shiny)
library(psych)
library(ggplot2)
library(dplyr)
library(datasets)
library(plotly)
data("airquality")
a<-data.frame(airquality)
class(a)
describe(a)
```
Sys.setenv(LANGUAGE="en")
library(shiny)
library(psych)
library(ggplot2)
library(dplyr)
library(datasets)
library(plotly)
data("airquality")
a<-data.frame(airquality)
describe(a)
```
Sys.setenv(LANGUAGE="en")
library(shiny)
library(psych)
library(ggplot2)
library(dplyr)
library(datasets)
library(plotly)
data("airquality")
a<-data.frame(airquality)
describe(a)
```
Sys.setenv(LANGUAGE="en")
library(shiny)
library(psych)
library(ggplot2)
library(dplyr)
library(datasets)
library(plotly)
data("airquality")
a<-data.frame(airquality)
describe(a)
```
devtools::session_info('xaringan')
.libPaths()
find.package('xaringan')
install.packages("DT")
options(htmltools.dir.version = FALSE)
p2<-plot_ly(a, x=a$Day, y=a$Wind, type="bar") %>% layout(xaxis=list(title='Day'), yaxis=list(title='Wind'))
a<-c(0,25,25,25,25,25,25)
mean(a)
sd(a)
a<-c(0,1,1,1,1,1,2)
sd(a)
library(dplyr)
library(ggplot2)
library(statsr)
data(arbuthnot)
dim(arbuthnot)
data("present")
dim(present)
range(present$year)
data(nycflights)
names(nycflights)
dim(nvcflights$flight)
dim(nycflights$flight)
0.7762241/0.1833639
1/ 4.233244
library(statsr)
library(dplyr)
library(ggplot2)
data(kobe_basket)
library(ggplot2)
library(quanteda)
library(dplyr)
# Downloading
url  <- "http://d396qusza40orc.cloudfront.net/dsscapstone/dataset/Coursera-SwiftKey.zip"
if (!file.exists("DATA/Coursera-SwiftKey.zip")){
download.file(url, destfile="DATA/Coursera-SwiftKey.zip")
}
# Unzipping
mydata =c("final/en_US/en_US.twitter.txt", "final/en_US/en_US.news.txt","final/en_US/en_US.blogs.txt")
unzip("DATA/Coursera-SwiftKey.zip", exdir = "DATA")
install.packages("tidyverse")
install.packages("tidytext")
library(tidytext)
library(tidyverse)
library(stringr)
library(knitr)
library(wordcloud)
library(ngram)
install.packages("ggplot2")
install.packages("ggplot2")
news <- readLines("~/Course2 Assignment 10/Final Project/final/en_US/en_US.news.txt", encoding = 'UTF-8',warn = FALSE, skipNul = TRUE)
twitter <- readLines("~/Course2 Assignment 10/Final Project/final/en_US/en_US.twitter.txt", encoding = 'UTF-8',warn = FALSE, skipNul = TRUE)
blogs <- readLines("~/Course2 Assignment 10/Final Project/final/en_US/en_US.blogs.txt", encoding = 'UTF-8',warn = FALSE, skipNul = TRUE)
n<-file("final/en_US/en_US.news.txt", open="rb")
close(n)
rm(n)
bl <- data_frame(text = blogs)
ne <- data_frame(text = news)
tw <- data_frame(text = twitter)
set.seed(50)
SamplePercentage <- 0.16
bsample <- bl %>%
sample_n(., nrow(bl)*SamplePercentage)
nsample <- ne %>%
sample_n(., nrow(ne)*SamplePercentage)
tsample <- tw %>%
sample_n(., nrow(tw)*SamplePercentage)
sampleData <- bind_rows(
mutate(bsample, source = "bl"),
mutate(nsample,  source = "ne"),
mutate(tsample, source = "tw")
)
sampleData$source <- as.factor(sampleData$source)
bfile <- "./final/en_US/en_US.blogs.txt"
nfile <- "./final/en_US/en_US.news.txt"
tfile <- "./final/en_US/en_US.twitter.txt"
l<-c("bfile","nfile","tfile","bl","ne","tw","bsample","nsample","tsample","SamplePercentage")
rm(list=l)
data("stop_words")
swear_words <- read_delim("~/Course2 Assignment 10/Final Project/final/swearWords.csv", delim = "\n", col_names = FALSE)
swear_words <- unnest_tokens(swear_words, word, X1)
replace_reg <- "[^[:alpha:][:space:]]*"
replace_url <- "http[^[:space:]]*"
replace_aaa <- "\\b(?=\\w*(\\w)\\1)\\w+\\b"
clean_sampleData<-sampleData %>%
mutate(text = str_replace_all(text, replace_reg, "")) %>%
mutate(text = str_replace_all(text, replace_url, "")) %>%
mutate(text = str_replace_all(text, replace_aaa, "")) %>%
mutate(text = iconv(text, "ASCII//TRANSLIT"))
swear_words <- read.delim("~/Course2 Assignment 10/Final Project/final/swearWords.csv", delim = "\n", col_names = FALSE)
swear_words <- unnest.tokens(swear_words, word, X1)
iconv(text, "ASCII//TRANSLIT")
mutate(text = iconv(text, "ASCII//TRANSLIT"))
shiny::runApp('Course2 Assignment 10/Final Project/final/WordPred')
runApp('Course2 Assignment 10/Final Project/final/WordPred')
library(tm)
getCorpus <- function(){
#Load Data
bfile <- "~/Course2 Assignment 10/Final Project/final/en_US/en_US.blogs.txt"
nfile <- "~/Course2 Assignment 10/Final Project/final/en_US/en_US.news.txt"
tfile <- "~/Course2 Assignment 10/Final Project/final/en_US/en_US.twitter.txt"
nt<-readLines(nfile, skipNul = TRUE)
close(news)
tt<-readLines(tfile, skipNul = TRUE)
close(twitter)
bt<-readLines(bfile, skipNul = TRUE)
close(blogs)
rm(news)
ln<-length(news);lt<-length(twitter);lb<-length(blogs)
#Sampling
set.seed(1000)
bt<-sample(bt, lb*0.01)
nt<-sample(nt, ln*0.01)
tt<-sample(tt, lt*0.01)
# Union corpora
corpora <- c(nt,bt,tt)
corpora <-  iconv(corpora, to ="utf-8")
corpora <- VectorSource(corpora)
corpora <- VCorpus(corpora)
corpora <- preprocess(corpora)
corpora
}
preprocess <- function(text){
toSpace <- content_transformer(function(x, pattern) gsub(pattern, " ", x))
text <- tm_map(text, toSpace, "/|@|//|$|:|:)|*|&|!|?|_|-|#|")
text <- tm_map(text, removeNumbers)
text <- tm_map(text, content_transformer(tolower))
text <- tm_map(text, removePunctuation)
text <- tm_map(text, stemDocument)
text <- tm_map(text, stripWhitespace)
text
}
saveRDS(getCorpus(),'corpus.RData')
library(tm)
getCorpus <- function(){
#Load Data
con <- file("en_US/en_US.news.txt", open="r")
news_text <- readLines(con); close(con)
con <- file("en_US/en_US.blogs.txt", open="r")
blogs_text <- readLines(con); close(con)
con <- file("en_US/en_US.twitter.txt", open="r")
twit_text <- readLines(con); close(con)
rm(con)
#Sampling
set.seed(2510)
blogs_text <- sample(blogs_text, size = 500)
news_text <- sample(news_text, size = 500)
twit_text <- sample(twit_text, size = 500)
# Union corpora
corpora <- c(news_text,blogs_text,twit_text)
corpora <-  iconv(corpora, to ="utf-8")
corpora <- VectorSource(corpora)
corpora <- VCorpus(corpora)
corpora <- preprocess(corpora)
corpora
}
preprocess <- function(text){
toSpace <- content_transformer(function(x, pattern) gsub(pattern, " ", x))
text <- tm_map(text, toSpace, "/|@|//|$|:|:)|*|&|!|?|_|-|#|")
text <- tm_map(text, removeNumbers)
text <- tm_map(text, content_transformer(tolower))
text <- tm_map(text, removePunctuation)
text <- tm_map(text, stemDocument)
text <- tm_map(text, stripWhitespace)
text
}
saveRDS(getCorpus(),'corpus.RData')
library(ngram)
library(quanteda)
library(data.table)
news <- readLines("final/en_US/en_US.news.txt", encoding = 'UTF-8',warn = FALSE)
twitter <- readLines("final/en_US/en_US.twitter.txt", encoding = 'UTF-8',warn = FALSE)
blogs <- readLines("final/en_US/en_US.blogs.txt", encoding = 'UTF-8',warn = FALSE)
ln<-length(news);lt<-length(twitter);lb<-length(blogs)
cn<-wordcount(news);ct<-wordcount(twitter);cb<-wordcount(blogs)
x<-rbind(ln,lt,lb)
y<-rbind(cn,ct,cb)
c<-as.data.frame(cbind(x,y))
names(c)<-c("nr of lines","nr of words")
rownames(c)<-c("news","twitter","blogs")
c
cb<-sample(lb, lb*0.1)
cn<-sample(ln, ln*0.1)
ct<-sample(lt, lt*0.1)
tsam<-twitter[ct]
nsam<-news[cn]
bsam<-blogs[cb]
master_vector <- c(tsam,bsam,nsam)
corp <- corpus(master_vector)
master_Tokens <- tokens(
x = tolower(corp),
remove_punct = TRUE,
remove_twitter = TRUE,
remove_numbers = TRUE,
remove_hyphens = TRUE,
remove_symbols = TRUE,
remove_url = TRUE
)
load("C:/Users/DMB30820930/Downloads/bigram.RData")
load("~/Course2 Assignment 10/Final Project/bigram.RData")
insta
install.packages("grDevices")
install.packages("grDevices")
install.packages("grDevices")
shiny::runApp('Final Project/final/Word')
runApp('Final Project/final/Word')
subtract_and_divide<- function(x,y){
x-y
x/y
}
subtract_and_divide(4,8)
home <- c("computer","calculator","scanner")
office <- c("paper","pens","pencils")
inventory <- data.frame(home,office)
inventory$annex <- c("printer","stapler")
ml<-list(1,2,"M",2)
unlist(ml)
m<-matrix(1:6,3,2)
m[,-1]
a<-c(1,2,TRUE)
b<-c(3,4,FALSE)
c<-(a|b)
c
as.logical(c(-2,-1,0))
v<-1:3
names(v)<-c("a","b","c")
v[4]<-4
v
names(v[4])
setwd("~/Project 01")
library(ggplot2)
library(tidyverse)
library(dplyr)
library(ggpubr)
vg<-read.csv("vgsales.csv")
vg<-dplyr::filter(vg,!is.na(Year))
head(vg,5)
vgX360Action<-subset(vg, Platform=="X360" & Genre=="Action" & Year<="2016")
g1<-ggplot(vgX360Action, aes(x=Year, y=Global_Sales))+geom_bar(stat='identity',color='lightblue')+labs(x='Year',y='Sales')
vgX360Shooter<-subset(vg, Platform=="X360" & Genre=="Shooter" & Year<="2016")
g2<-ggplot(vgX360Shooter, aes(x=Year, y=Global_Sales))+geom_bar(stat='identity',color='lightgreen')+labs(x='Year',y='Sales')
vgPS3Action<-subset(vg, Platform=="PS3" & Genre=="Action" & Year<="2016")
g3<-ggplot(vgPS3Action, aes(x=Year, y=Global_Sales))+geom_bar(stat='identity',color='blue')+labs(x='Year',y='Sales')
vgPS3shooter<-subset(vg, Platform=="PS3" & Genre=="Shooter" & Year<="2016")
g4<-ggplot(vgPS3shooter, aes(x=Year, y=Global_Sales))+geom_bar(stat='identity',color='green')+labs(x='Year',y='Sales')
ggarrange(g1,g2,g3,g4,nrow=2,ncol=2)
